<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YarnSpinner.Compiler</name>
    </assembly>
    <members>
        <member name="M:Yarn.Compiler.CodeGenerationVisitor.GenerateCodeForOperation(Yarn.Operator,Yarn.IType,Antlr4.Runtime.ParserRuleContext[])">
            <summary>
            Emits code that calls a method appropriate for the operator
            <paramref name="op"/> on the type <paramref name="type"/>,
            given the operands <paramref name="operands"/>.
            </summary>
            <param name="op">The operation to perform on <paramref
            name="operands"/>.</param>
            <param name="type">The type of the expression.</param>
            <param name="operands">The operands to perform the operation
            <paramref name="op"/> on.</param>
        </member>
        <member name="M:Yarn.Compiler.StringTableManager.RegisterString(System.String,System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Registers a new string in the string table.
            </summary>
            <param name="text">The text of the string to register.</param>
            <param name="nodeName">The name of the node that this string
            was found in.</param>
            <param name="lineID">The line ID to use for this entry in the
            string table.</param>
            <param name="lineNumber">The line number that this string was
            found in.</param>
            <param name="tags">The tags to associate with this string in
            the string table.</param>
            <returns>The string ID for the newly registered
            string.</returns>
            <remarks>If <paramref name="lineID"/> is <see
            langword="null"/>, a line ID will be generated from <paramref
            name="fileName"/>, <paramref name="nodeName"/>, and the number
            of elements in <see cref="F:Yarn.Compiler.StringTableManager.StringTable"/>.</remarks>
        </member>
        <member name="M:Yarn.Compiler.StringTableManager.ContainsKey(System.String)">
            <summary>
            Checks to see if this string table already contains a line with
            the line ID <paramref name="lineID"/>.
            </summary>
            <param name="lineID">The line ID to check for.</param>
            <returns><see langword="true"/> if the string table already
            contains a line with this ID, <see langword="false"/>
            otherwise.</returns>
        </member>
        <member name="T:Yarn.Compiler.StringInfo">
            <summary>
            Information about a string. Stored inside a string table, which is
            produced from the Compiler.
            </summary>
            <remarks>
            You do not create instances of this class yourself. They are
            generated by the <see cref="T:Yarn.Compiler.Compiler"/>.
            </remarks>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.text">
            <summary>
            The original text of the string.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.nodeName">
            <summary>
            The name of the node that this string was found in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.lineNumber">
            <summary>
            The line number at which this string was found in the file.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.fileName">
            <summary>
            The name of the file this string was found in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.isImplicitTag">
            <summary>
            Indicates whether this string's line ID was implicitly
            generated.
            </summary>
            <remarks>
            Implicitly generated line IDs are not guaranteed to remain the
            same across multiple compilations. To ensure that a line ID
            remains the same, you must define it by adding a [line
            tag]({{|ref "/docs/unity/localisation.md"|}}) to the line.
            </remarks>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.metadata">
            <summary>
            The metadata (i.e. hashtags) associated with this string.
            </summary>
            <remarks>
            This array will contain any hashtags associated with this
            string besides the `#line:` hashtag.
            </remarks>
        </member>
        <member name="M:Yarn.Compiler.StringInfo.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Yarn.Compiler.StringInfo"/>
            struct.
            </summary>
            <param name="text">The text of the string.</param>
            <param name="fileName">The file name.</param>
            <param name="nodeName">The node name.</param>
            <param name="lineNumber">The line number.</param>
            <param name="isImplicitTag">If `true`, this string info is
            stored with an implicit line ID.</param>
            <param name="metadata">The string's metadata.</param>
        </member>
        <member name="T:Yarn.Compiler.CompilationJob.File">
            <summary>
            Represents the contents of a file to compile.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.Type.FullCompilation">
            <summary>The compiler will do a full compilation, and
            generate a <see cref="T:Yarn.Program"/>, function declaration set,
            and string table.</summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.Type.DeclarationsOnly">
            <summary>The compiler will derive only the variable and
            function declarations, and file tags, found in the
            script.</summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.Type.StringsOnly">
            <summary>The compiler will generate a string table
            only.</summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.Files">
            <summary>
            The <see cref="T:Yarn.Compiler.CompilationJob.File"/> structs that represent the content to
            parse..
            </summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.Library">
            <summary>
            The <see cref="F:Yarn.Compiler.CompilationJob.Library"/> that contains declarations for
            functions.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.CompilationType">
            <summary>
            The type of compilation to perform.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.CompilationJob.VariableDeclarations">
            <summary>
            The declarations for variables.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.CompilationJob.CreateFromFiles(System.Collections.Generic.IEnumerable{System.String},Yarn.Library)">
            <summary>
            Creates a new <see cref="T:Yarn.Compiler.CompilationJob"/> using the contents
            of a collection of files.
            </summary>
            <param name="paths">The paths to the files.</param>
            <returns>A new <see cref="T:Yarn.Compiler.CompilationJob"/>.</returns>
        </member>
        <member name="M:Yarn.Compiler.CompilationJob.CreateFromString(System.String,System.String,Yarn.Library)">
            <summary>
            Creates a new <see cref="T:Yarn.Compiler.CompilationJob"/> using the contents
            of a string.
            </summary>
            <param name="fileName">The name to assign to the compiled
            file.</param>
            <param name="source">The text to compile.</param>
            <returns>A new <see cref="T:Yarn.Compiler.CompilationJob"/>.</returns>
        </member>
        <member name="T:Yarn.Compiler.Compiler">
            <summary>
            Compiles Yarn code.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Compiler.invalidNodeTitleNameRegex">
            <summary>A regular expression used to detect illegal characters
            in node titles.</summary>
        </member>
        <member name="P:Yarn.Compiler.Compiler.CurrentNode">
            <summary>
            Gets the current node to which instructions are being added.
            </summary>
            <value>The current node.</value>
        </member>
        <member name="P:Yarn.Compiler.Compiler.RawTextNode">
            <summary>
            Gets whether we are currently parsing the current node as a
            'raw text' node, or as a fully syntactic node.
            </summary>
            <value>Whether this is a raw text node or not.</value>
        </member>
        <member name="P:Yarn.Compiler.Compiler.Program">
            <summary>
            Gets the program being generated by the compiler.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Compiler.VariableDeclarations">
            <summary>
            The list of variable declarations known to the compiler.
            Supplied as part of a <see cref="T:Yarn.Compiler.CompilationJob"/>, or by <see
            cref="M:Yarn.Compiler.Compiler.GetDeclarations(Yarn.Compiler.FileParseResult,System.Collections.Generic.IEnumerable{Yarn.Compiler.Declaration},System.Collections.Generic.IEnumerable{Yarn.Compiler.Declaration}@,System.Collections.Generic.IEnumerable{Yarn.IType},System.Collections.Generic.IEnumerable{System.String}@,System.Collections.Generic.IEnumerable{Yarn.Compiler.Diagnostic}@)"/>
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Compiler.Library">
            <summary>
            The Library, which contains the function declarations known to
            the compiler. Supplied as part of a <see
            cref="T:Yarn.Compiler.CompilationJob"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Compiler.Diagnostics">
            <summary>
            Gets the list of new <see cref="T:Yarn.Compiler.Diagnostic"/> objects created
            during code generation. This does not include any existing
            diagnostics, such as parse errors.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetDeclarationsFromLibrary(Yarn.Library)">
            <summary>
            Returns a collection of <see cref="T:Yarn.Compiler.Declaration"/> structs that
            describe the functions present in <paramref name="library"/>.
            </summary>
            <param name="library">The <see cref="P:Yarn.Compiler.Compiler.Library"/> to get
            declarations from.</param>
            <returns>The <see cref="T:Yarn.Compiler.Declaration"/> structs found.</returns>
            <throws cref="!:TypeException">Thrown when a function in
            <paramref name="library"/> has an invalid return type, an
            invalid parameter type, an optional parameter, or an out
            parameter.</throws>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetTokensFromFile(System.String)">
            <summary>
            Lexes a string containing source code, and returns a list of
            tokens found in the source code.
            </summary>
            <param name="path">The path of the file containing source code
            to extract tokens from.</param>
            <returns>The list of tokens extracted from the source
            code.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetTokensFromString(System.String)">
            <summary>
            Lexes a string containing source code, and returns a list of
            tokens found in the source code.
            </summary>
            <param name="text">The source code to extract tokens
            from.</param>
            <returns>The list of tokens extracted from the source
            code.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.RegisterLabel(System.String)">
            <summary>
            Generates a unique label name to use in the program.
            </summary>
            <param name="commentary">Any additional text to append to the
            end of the label.</param>
            <returns>The new label name.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.Emit(Yarn.Node,Yarn.Instruction.Types.OpCode,Yarn.Operand[])">
            <summary>
            Creates a new instruction, and appends it to a node in the <see
            cref="P:Yarn.Compiler.Compiler.Program" />.
            </summary>
            <param name="node">The node to append instructions to.</param>
            <param name="code">The opcode of the instruction.</param>
            <param name="operands">The operands to associate with the
            instruction.</param>
        </member>
        <member name="M:Yarn.Compiler.Compiler.Emit(Yarn.Instruction.Types.OpCode,Yarn.Operand[])">
            <summary>
            Creates a new instruction, and appends it to the current node
            in the <see cref="P:Yarn.Compiler.Compiler.Program"/>. Called by instances of <see
            cref="T:Yarn.Compiler.CodeGenerationVisitor"/> while walking the parse tree.
            </summary>
            <param name="code">The opcode of the instruction.</param>
            <param name="operands">The operands to associate with the
            instruction.</param>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetLineIDTag(Yarn.Compiler.YarnSpinnerParser.HashtagContext[])">
            <summary>
            Extracts a line ID from a collection of <see
            cref="T:Yarn.Compiler.YarnSpinnerParser.HashtagContext"/>s, if one exists.
            </summary>
            <param name="hashtagContexts">The hashtag parsing
            contexts.</param>
            <returns>The line ID if one is present in the hashtag contexts,
            otherwise `null`.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.FlattenParseTree(Antlr4.Runtime.Tree.IParseTree)">
            <summary>
            Flattens a tree of <see cref="T:Antlr4.Runtime.Tree.IParseTree"/> objects by
            recursively visiting their children, and converting them into a
            flat <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="node">The root node to begin work from.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a
            flattened version of the hierarchy rooted at <paramref
            name="node"/>.</returns>
        </member>
        <member name="T:Yarn.Compiler.ConstantValueVisitor">
            <summary>
            A visitor that visits any valid constant value, and returns a <see
            cref="T:Yarn.Value"/>. Currently only supports terminals, not expressions,
            even if those expressions would be constant.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.ConstantValueVisitor.#ctor(Antlr4.Runtime.ParserRuleContext,System.String,System.Collections.Generic.IEnumerable{Yarn.IType},System.Collections.Generic.List{Yarn.Compiler.Diagnostic}@)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Yarn.Compiler.ConstantValueVisitor"/> class.
            </summary>
            <param name="context">The parser context for this value.</param>
            <param name="sourceFileName">The name of the file that is being
            visited by this instance.</param>
            <param name="types">The types of values known to this instance.</param>
        </member>
        <member name="P:Yarn.Compiler.Declaration.Name">
            <summary>
            Gets the name of this Declaration.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Declaration.CreateVariable(System.String,Yarn.IType,System.IConvertible,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Yarn.Compiler.Declaration"/> class,
            using the given <paramref name="name"/> and default value. The
            <see cref="!:ReturnType"/> of the new instance will be configured
            based on the type of <paramref name="defaultValue"/>, and the
            <see cref="!:DeclarationType"/> will be <see
            cref="!:Type.Variable"/>. All other properties will be their
            default values.
            </summary>
            <param name="name">The name of the new declaration.</param>
            <param name="defaultValue">The default value of the
            declaration. This must be a string, a number (integer or
            floating-point), or boolean value.</param>
            <param name="description">The description of the new
            declaration.</param>
            <returns>A new instance of the <see cref="T:Yarn.Compiler.Declaration"/>
            class.</returns>
        </member>
        <member name="P:Yarn.Compiler.Declaration.DefaultValue">
            <summary>
            Gets the default value of this <see cref="T:Yarn.Compiler.Declaration"/>, if no
            value has been specified in code or is available from a <see
            cref="T:Yarn.Dialogue"/>'s <see cref="T:Yarn.IVariableStorage"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Declaration.Description">
            <summary>
            Gets a string describing the purpose of this <see
            cref="T:Yarn.Compiler.Declaration"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Declaration.SourceFileName">
            <summary>
            Gets the name of the file in which this Declaration was found.
            </summary>
            <remarks>
            If this <see cref="T:Yarn.Compiler.Declaration"/> was not found in a Yarn
            source file, this will be <see cref="F:Yarn.Compiler.Declaration.ExternalDeclaration"/>.
            </remarks>
        </member>
        <member name="P:Yarn.Compiler.Declaration.SourceNodeName">
            <summary>
            Gets the name of the node in which this Declaration was found.
            </summary>
            <remarks>
            If this <see cref="T:Yarn.Compiler.Declaration"/> was not found in a Yarn
            source file, this will be <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Yarn.Compiler.Declaration.SourceFileLine">
            <summary>
            The line number at which this Declaration was found in the
            source file.
            </summary>
            <remarks>
            If this <see cref="T:Yarn.Compiler.Declaration"/> was not found in a Yarn
            source file, this will be -1.
            </remarks>
        </member>
        <member name="P:Yarn.Compiler.Declaration.SourceNodeLine">
            <summary>
            Gets the line number at which this Declaration was found in the node
            indicated by <see cref="P:Yarn.Compiler.Declaration.SourceNodeName"/>.
            </summary>
            <remarks>
            If this <see cref="T:Yarn.Compiler.Declaration"/> was not found in a Yarn
            source file, this will be -1.
            </remarks>
        </member>
        <member name="P:Yarn.Compiler.Declaration.IsImplicit">
            <summary>
            Get or sets a value indicating whether this Declaration was implicitly
            inferred from usage.
            </summary>
            <value>If <see langword="true"/>, this Declaration was
            implicitly inferred from usage. If <see langword="false"/>,
            this Declaration appears in the source code.</value>
        </member>
        <member name="F:Yarn.Compiler.Declaration.ExternalDeclaration">
            <summary>
            The string used for <see cref="P:Yarn.Compiler.Declaration.SourceFileName"/> if the
            Declaration was found outside of a Yarn source file.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Declaration.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Yarn.Compiler.Declaration.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Yarn.Compiler.Declaration.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Yarn.Compiler.DeclarationVisitor">
            <summary>
            A visitor that extracts variable declarations from a parse tree.
            /// After visiting an entire parse tree for a file, the <see
            cref="P:Yarn.Compiler.DeclarationVisitor.NewDeclarations"/> property will contain all explicit
            variable declarations that were found.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.DeclarationVisitor.tokens">
            <summary>
            The CommonTokenStream derived from the file we're parsing. This
            is used to find documentation comments for declarations.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.DeclarationVisitor.currentNodeContext">
            <summary>
            The context of the node we're currently in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.DeclarationVisitor.sourceFileName">
            <summary>
            The name of the file we're currently in.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.DeclarationVisitor.Types">
            <summary>
            Gets the collection of types known to this <see
            cref="T:Yarn.Compiler.DeclarationVisitor"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.DeclarationVisitor.NewDeclarations">
            <summary>
            Gets the collection of new variable declarations that were
            found as a result of using this <see
            cref="T:Yarn.Compiler.DeclarationVisitor"/> to visit a <see
            cref="T:Antlr4.Runtime.ParserRuleContext"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.DeclarationVisitor.FileTags">
            <summary>
            Gets the collection of file-level hashtags that were found as a
            result of using this <see cref="T:Yarn.Compiler.DeclarationVisitor"/> to visit
            a <see cref="T:Antlr4.Runtime.ParserRuleContext"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.DeclarationVisitor.Declarations">
            <summary>
            The collection of all declarations - both the ones we received
            at the start, and the new ones we've derived ourselves.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.IndentAwareLexer">
            <summary>
            A Lexer subclass that detects newlines and generates indent and
            dedent tokens accordingly.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.IndentAwareLexer.indents">
            <summary>
            A stack keeping track of the levels of indentations we have
            seen so far.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.IndentAwareLexer.pendingTokens">
            <summary>
            The collection of tokens that we have seen, but have not yet
            returned. This is needed when NextToken encounters a newline,
            which means we need to buffer indents or dedents. NextToken
            only returns a single <see cref="T:Antlr4.Runtime.IToken"/> at a time, which
            means we use this list to buffer it.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.IndentAwareLexer.warnings">
            <summary>
            The collection of <see cref="T:Yarn.Compiler.IndentAwareLexer.Warning"/> objects we've
            generated.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.IndentAwareLexer.#ctor(Antlr4.Runtime.ICharStream,System.IO.TextWriter,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Yarn.Compiler.IndentAwareLexer"/> class.
            </summary>
            <param name="input">The incoming character stream.</param>
            <param name="output">The <see cref="T:System.IO.TextWriter"/> to send
            output to.</param>
            <param name="errorOutput">The <see cref="T:System.IO.TextWriter"/> to send
            errors to.</param>
        </member>
        <member name="M:Yarn.Compiler.IndentAwareLexer.#ctor(Antlr4.Runtime.ICharStream)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Yarn.Compiler.IndentAwareLexer"/> class.
            </summary>
            <param name="input">The incoming character stream.</param>
        </member>
        <member name="P:Yarn.Compiler.IndentAwareLexer.Warnings">
            <summary>
            Gets the collection of warnings determined during lexing.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.IndentAwareLexer.NextToken">
            <inheritdoc/>
        </member>
        <member name="M:Yarn.Compiler.IndentAwareLexer.InsertToken(System.String,System.Int32)">
            <summary>
            Inserts a new token with the given text and type, as though it
            had appeared in the input stream.
            </summary>
            <param name="text">The text to use for the token.</param>
            <param name="type">The type of the token.</param>
            <remarks>The token will have a zero length.</remarks>
        </member>
        <member name="T:Yarn.Compiler.IndentAwareLexer.Warning">
            <summary>
            A warning emitted during lexing.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.IndentAwareLexer.Warning.Token">
            <summary>
            The token associated with the warning.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.IndentAwareLexer.Warning.Message">
            <summary>
            The message associated with the warning.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.StringTableGeneratorVisitor">
            <summary>
            A Visitor that walks an expression parse tree and generates string
            table entries, which are provided to a <see
            cref="T:Yarn.Compiler.StringTableManager"/>. This string table can then be provided
            to future compilation passes, or stored for later use. Call the
            <see cref="!:Visit"/> method to begin generating string table
            entries.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.StringTableGeneratorVisitor.Diagnostics">
            <summary>
            Gets the collection of <see cref="T:Yarn.Compiler.Diagnostic"/> objects
            generated by this object.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.TypeCheckVisitor">
            <summary>
            A visitor that walks the parse tree, checking for type consistency
            in expressions. Existing type information is provided via the <see
            cref="F:Yarn.Compiler.TypeCheckVisitor.existingDeclarations"/> property. This visitor will also
            attempt to infer the type of variables that don't have an explicit
            declaration; for each of these, a new Declaration will be created
            and made available via the <see cref="P:Yarn.Compiler.TypeCheckVisitor.NewDeclarations"/> property.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.TypeCheckVisitor.currentNodeContext">
            <summary>
            The context of the node we're currently in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.TypeCheckVisitor.sourceFileName">
            <summary>
            The name of the file we're currently in.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.TypeCheckVisitor.NewDeclarations">
            <summary>
            Gets the collection of new variable declarations that were
            found as a result of using this <see
            cref="T:Yarn.Compiler.TypeCheckVisitor"/> to visit a <see
            cref="T:Antlr4.Runtime.ParserRuleContext"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.TypeCheckVisitor.Declarations">
            <summary>
            Gets the collection of all declarations - both the ones we received
            at the start, and the new ones we've derived ourselves.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.TypeCheckVisitor.#ctor(System.String,System.Collections.Generic.IEnumerable{Yarn.Compiler.Declaration},System.Collections.Generic.IEnumerable{Yarn.IType})">
            <summary>
            Initializes a new instance of the <see
            cref="T:Yarn.Compiler.TypeCheckVisitor"/> class.
            </summary>
            <param name="sourceFileName">The name of the source file that
            the visitor will operate on.</param>
            <param name="existingDeclarations">A collection of <see
            cref="T:Yarn.Compiler.Declaration"/> objects that contain type
            information.</param>
            <param name="types">A collection of type definitions.</param>
        </member>
        <member name="T:Yarn.Compiler.TypeDeclarationListener">
            <summary>
            A listener that, when used with a <see cref="T:Antlr4.Runtime.Tree.ParseTreeWalker"/>,
            populates a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Yarn.IType"/> objects
            that represent any new types that were declared in the parse tree.
            These new types can then be used for values elsewhere in the
            script.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Upgrader.UpgradeResult.Diagnostics">
            <summary>
            Gets a collection containing all <see cref="T:Yarn.Compiler.Diagnostic"/>
            objects across all of the files in <see cref="F:Yarn.Compiler.Upgrader.UpgradeResult.Files"/>.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile.IsNewFile">
            <summary>
            Indicates whether this <see cref="T:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile"/> represents
            a new file to be created. If this is <see
            langword="true"/>, <see cref="F:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile.OriginalSource"/> will be the
            empty string, and <see cref="F:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile.Replacements"/> will be empty.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile.Merge(Yarn.Compiler.Upgrader.UpgradeResult.OutputFile,Yarn.Compiler.Upgrader.UpgradeResult.OutputFile)">
            <summary>
            Merges two <see cref="T:Yarn.Compiler.Upgrader.UpgradeResult.OutputFile"/> objects, producing a
            merged result.
            </summary>
            <param name="a">The first file.</param>
            <param name="b">The second file.</param>
            <returns>The merged result.</returns>
        </member>
        <member name="T:Yarn.Compiler.Upgrader.TextReplacement">
            <summary>
            Contains information describing a replacement to make in a string.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.TextReplacement.Start">
            <summary>
            The position in the original string where the substitution
            should be made.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.TextReplacement.StartLine">
            <summary>
            The line in the original string where the substitution should
            be made.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.TextReplacement.OriginalText">
            <summary>
            The string to expect at <see cref="F:Yarn.Compiler.Upgrader.TextReplacement.Start"/> in the original
            string.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.TextReplacement.ReplacementText">
            <summary>
            The string to replace <see cref="F:Yarn.Compiler.Upgrader.TextReplacement.OriginalText"/> with at <see
            cref="F:Yarn.Compiler.Upgrader.TextReplacement.Start"/>.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.TextReplacement.Comment">
            <summary>
            A descriptive comment explaining why the substitution is
            necessary.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Upgrader.TextReplacement.OriginalLength">
            <summary>
            Gets the length of <see cref="F:Yarn.Compiler.Upgrader.TextReplacement.OriginalText"/>.
            </summary>
        </member>
        <member name="P:Yarn.Compiler.Upgrader.TextReplacement.ReplacementLength">
            <summary>
            Gets the length of <see cref="P:Yarn.Compiler.Upgrader.TextReplacement.ReplacementLength"/>.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.Upgrader.LanguageUpgrader">
            <summary>
            Contains methods for upgrading the syntax of Yarn scripts.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Upgrader.LanguageUpgrader.Upgrade(Yarn.Compiler.Upgrader.UpgradeJob)">
            <summary>
            Upgrades a Yarn script from one version of the language to
            another, producing both the fully upgraded text as well as a
            collection of replacements.
            </summary>
            <param name="upgradeJob">The upgrade job to perform.</param>
            <throws cref="!:ParseException">Thrown when a syntax error exists
            in originalText.</throws> <throws
            cref="!:UpgradeException">Thrown when an error occurs during the
            upgrade process.</throws>
            <returns>An <see cref="T:Yarn.Compiler.Upgrader.UpgradeResult"/> object containing the
            results of the upgrade operation.</returns>
        </member>
        <member name="M:Yarn.Compiler.Upgrader.LanguageUpgrader.ApplyReplacements(System.String,System.Collections.Generic.IEnumerable{Yarn.Compiler.Upgrader.TextReplacement})">
            <summary>
            Applies a collection of string replacements to a string.
            </summary>
            <param name="originalText">The string to modify.</param>
            <param name="replacements">A collection of <see
            cref="T:Yarn.Compiler.Upgrader.TextReplacement"/>s to make in the <paramref
            name="originalText"/>.</param>
            <returns>The modified string.</returns>
            <throws cref="T:System.ArgumentOutOfRangeException">Thrown when a
            replacement refers to an invalid position in originalText, or
            its original text does not match what exists in the
            text.</throws>
        </member>
        <member name="T:Yarn.Compiler.Upgrader.TypeBinding">
            <summary>
            Stores information about a relationship between a variable and its
            type.
            </summary>
            <remarks>
            This type is generated by classes such as <see
            cref="T:Yarn.Compiler.Upgrader.VariableDeclarationUpgrader.VariableTypeBindingVisitor"/>.
            It's possible for multiple type bindings for a single variable may
            exist, such as in cases where a variable is being used as a string
            and a number. This is syntactically valid, but semantically an
            error; to detect cases like this, users of this class should gather
            every possible binding they can find for a variable, and then call
            <see cref="M:Yarn.Compiler.Upgrader.TypeBinding.UnifyBindings(System.Collections.Generic.IEnumerable{Yarn.Compiler.Upgrader.TypeBinding})"/>.
            </remarks>
        </member>
        <member name="T:Yarn.Compiler.Upgrader.VariableDeclarationUpgrader.VariableTypeBindingVisitor">
            <summary>
            A Visitor that walks an expression parse tree and returns its type.
            Call the <see cref="!:Visit"/> method to begin checking. If a single
            valid type for the parse tree can't be found, a TypeException is
            thrown.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.Upgrader.UpgradeType">
            <summary>
            Specifies what kind of language upgrading should be applied.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Upgrader.UpgradeType.Version1to2">
            <summary>
            Indicates an upgrade from Yarn Spinner 1.0 syntax to Yarn
            Spinner 2.0 syntax.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.YarnSpinnerV1ParserBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Yarn.Compiler.IYarnSpinnerV1ParserListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Enter a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Exit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Enter a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Exit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Visit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Visit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerV1ParserBaseVisitor`1.VisitOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Yarn.Compiler.IYarnSpinnerV1ParserListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Yarn.Compiler.YarnSpinnerV1Parser"/>.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Enter a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Exit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Enter a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Exit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.EnterOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserListener.ExitOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Yarn.Compiler.YarnSpinnerV1Parser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitDialogue(Yarn.Compiler.YarnSpinnerV1Parser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitFile_hashtag(Yarn.Compiler.YarnSpinnerV1Parser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitNode(Yarn.Compiler.YarnSpinnerV1Parser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitHeader(Yarn.Compiler.YarnSpinnerV1Parser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitBody(Yarn.Compiler.YarnSpinnerV1Parser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitStatement(Yarn.Compiler.YarnSpinnerV1Parser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitLine_statement(Yarn.Compiler.YarnSpinnerV1Parser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitLine_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitFormat_function(Yarn.Compiler.YarnSpinnerV1Parser.Format_functionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitKeyValuePairNamed(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNamedContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitKeyValuePairNumber(Yarn.Compiler.YarnSpinnerV1Parser.KeyValuePairNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitHashtag(Yarn.Compiler.YarnSpinnerV1Parser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitLine_condition(Yarn.Compiler.YarnSpinnerV1Parser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpParens(Yarn.Compiler.YarnSpinnerV1Parser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpMultDivMod(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpMultDivModEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpMultDivModEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpComparison(Yarn.Compiler.YarnSpinnerV1Parser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpNegative(Yarn.Compiler.YarnSpinnerV1Parser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpAndOrXor(Yarn.Compiler.YarnSpinnerV1Parser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpPlusMinusEquals(Yarn.Compiler.YarnSpinnerV1Parser.ExpPlusMinusEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpAddSub(Yarn.Compiler.YarnSpinnerV1Parser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpNot(Yarn.Compiler.YarnSpinnerV1Parser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpValue(Yarn.Compiler.YarnSpinnerV1Parser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitExpEquality(Yarn.Compiler.YarnSpinnerV1Parser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueNumber(Yarn.Compiler.YarnSpinnerV1Parser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueTrue(Yarn.Compiler.YarnSpinnerV1Parser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueFalse(Yarn.Compiler.YarnSpinnerV1Parser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueVar(Yarn.Compiler.YarnSpinnerV1Parser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueString(Yarn.Compiler.YarnSpinnerV1Parser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueNull(Yarn.Compiler.YarnSpinnerV1Parser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitValueFunc(Yarn.Compiler.YarnSpinnerV1Parser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitVariable(Yarn.Compiler.YarnSpinnerV1Parser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitFunction(Yarn.Compiler.YarnSpinnerV1Parser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitIf_statement(Yarn.Compiler.YarnSpinnerV1Parser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitIf_clause(Yarn.Compiler.YarnSpinnerV1Parser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitElse_if_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitElse_clause(Yarn.Compiler.YarnSpinnerV1Parser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitSetVariableToValue(Yarn.Compiler.YarnSpinnerV1Parser.SetVariableToValueContext)">
            <summary>
            Visit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitSetExpression(Yarn.Compiler.YarnSpinnerV1Parser.SetExpressionContext)">
            <summary>
            Visit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitCall_statement(Yarn.Compiler.YarnSpinnerV1Parser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitCommand_statement(Yarn.Compiler.YarnSpinnerV1Parser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitCommand_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitShortcut_option_statement(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitShortcut_option(Yarn.Compiler.YarnSpinnerV1Parser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitOptionLink(Yarn.Compiler.YarnSpinnerV1Parser.OptionLinkContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitOptionJump(Yarn.Compiler.YarnSpinnerV1Parser.OptionJumpContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerV1ParserVisitor`1.VisitOption_formatted_text(Yarn.Compiler.YarnSpinnerV1Parser.Option_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerV1Parser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:Yarn.Compiler.Utility">
            <summary>
            Utility methods for working with line tags.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Utility.GenerateYarnFileWithDeclarations(System.Collections.Generic.IEnumerable{Yarn.Compiler.Declaration},System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Generates a Yarn script that contains a node that declares
            variables.
            </summary>
            <remarks>This method is intended to be called by tools that let
            the user manage variable declarations. Such tools can read the
            existing variable declarations in from a script (by compiling
            the script with the `DeclarationsOnly` <see
            cref="F:Yarn.Compiler.CompilationJob.CompilationType"/>), allow the user to
            make changes, and then write the changes to disk by calling
            this method and saving the results.</remarks>
            <param name="declarations">The collection of <see
            cref="T:Yarn.Compiler.Declaration"/> objects to include in the output.</param>
            <param name="title">The title of the node that should be
            generated.</param>
            <param name="tags">The collection of tags that should be
            generated for the node. If this is <see langword="null"/>, no
            tags will be generated.</param>
            <param name="headers">The collection of additional headers that
            should be generated for the node. If this is <see
            langword="null"/>, no additional headers will be
            generated.</param>
            <returns>A string containing a Yarn script that declares the
            specified variables.</returns>
            <throws cref="T:System.ArgumentOutOfRangeException">Thrown when any of
            the <see cref="T:Yarn.Compiler.Declaration"/> objects in <paramref
            name="declarations"/> is not a variable declaration, or if the
            <see cref="!:Declaration.ReturnType"/> of any of the declarations
            is an invalid value.</throws>
        </member>
        <member name="M:Yarn.Compiler.Utility.AddTagsToLines(System.String,System.Collections.Generic.ICollection{System.String})">
             <summary>
             Given Yarn source code, adds line tags to the ends of all lines
             that need one and do not already have one.
             </summary>
             <remarks>This method ensures that it does not generate line
             tags that are already present in the file, or present in the
             <paramref name="existingLineTags"/> collection.
            
             Line tags are added to any line of source code that contains
             user-visible text: lines, options, and shortcut options.
             </remarks>
             <param name="contents">The source code to add line tags
             to.</param>
             <param name="existingLineTags">The collection of line tags
             already exist elsewhere in the source code; the newly added
             line tags will not be duplicates of any in this
             collection.</param>
             <returns>The modified source code, with line tags
             added.</returns>
        </member>
        <member name="M:Yarn.Compiler.Utility.ParseSource(System.String)">
            <summary>
            </summary>
            <param name="source">The source code to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Yarn.Compiler.Utility.GenerateString(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Generates a new unique line tag that is not present in
            `existingKeys`.
            </summary>
            <param name="existingKeys">The collection of keys that should
            be considered when generating a new, unique line tag.</param>
            <returns>A unique line tag that is not already present in
            `existingKeys`.</returns>
        </member>
        <member name="P:Yarn.Compiler.YarnSpinnerParser.ExpressionContext.Type">
            <summary>
            Gets or sets the type that this expression has been
            determined to be by a <see cref="T:Yarn.Compiler.TypeCheckVisitor"/>
            object.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.YarnSpinnerParserBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:Yarn.Compiler.IYarnSpinnerParserListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:Yarn.Compiler.IYarnSpinnerParserVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.YarnSpinnerParserBaseVisitor`1.VisitJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.ParserRuleContextExtension.GetTextWithWhitespace(Antlr4.Runtime.ParserRuleContext)">
            <summary>
            Returns the original text of this <see cref="!:ExpressionContext"/>, including all
            whitespace, comments, and other information that the parser
            would otherwise not include.
            </summary>
            <returns>The original text of this expression.</returns>
        </member>
        <member name="T:Yarn.Compiler.IYarnSpinnerParserListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:Yarn.Compiler.YarnSpinnerParser"/>.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.EnterJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserListener.ExitJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:Yarn.Compiler.IYarnSpinnerParserVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:Yarn.Compiler.YarnSpinnerParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitDialogue(Yarn.Compiler.YarnSpinnerParser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitFile_hashtag(Yarn.Compiler.YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitNode(Yarn.Compiler.YarnSpinnerParser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitHeader(Yarn.Compiler.YarnSpinnerParser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitBody(Yarn.Compiler.YarnSpinnerParser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitStatement(Yarn.Compiler.YarnSpinnerParser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitLine_statement(Yarn.Compiler.YarnSpinnerParser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitLine_formatted_text(Yarn.Compiler.YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitHashtag(Yarn.Compiler.YarnSpinnerParser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitLine_condition(Yarn.Compiler.YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpParens(Yarn.Compiler.YarnSpinnerParser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpMultDivMod(Yarn.Compiler.YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpComparison(Yarn.Compiler.YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpNegative(Yarn.Compiler.YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpAndOrXor(Yarn.Compiler.YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpAddSub(Yarn.Compiler.YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpNot(Yarn.Compiler.YarnSpinnerParser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpValue(Yarn.Compiler.YarnSpinnerParser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitExpEquality(Yarn.Compiler.YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueNumber(Yarn.Compiler.YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueTrue(Yarn.Compiler.YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueFalse(Yarn.Compiler.YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueVar(Yarn.Compiler.YarnSpinnerParser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueString(Yarn.Compiler.YarnSpinnerParser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueNull(Yarn.Compiler.YarnSpinnerParser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitValueFunc(Yarn.Compiler.YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:Yarn.Compiler.YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitVariable(Yarn.Compiler.YarnSpinnerParser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitFunction_call(Yarn.Compiler.YarnSpinnerParser.Function_callContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.function_call"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitIf_statement(Yarn.Compiler.YarnSpinnerParser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitIf_clause(Yarn.Compiler.YarnSpinnerParser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitElse_if_clause(Yarn.Compiler.YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitElse_clause(Yarn.Compiler.YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitSet_statement(Yarn.Compiler.YarnSpinnerParser.Set_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitCall_statement(Yarn.Compiler.YarnSpinnerParser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitCommand_statement(Yarn.Compiler.YarnSpinnerParser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitCommand_formatted_text(Yarn.Compiler.YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitShortcut_option_statement(Yarn.Compiler.YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitShortcut_option(Yarn.Compiler.YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitDeclare_statement(Yarn.Compiler.YarnSpinnerParser.Declare_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.declare_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:Yarn.Compiler.IYarnSpinnerParserVisitor`1.VisitJump_statement(Yarn.Compiler.YarnSpinnerParser.Jump_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:Yarn.Compiler.YarnSpinnerParser.jump_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:ErrorStrategy.ReportNoViableAlternative(Antlr4.Runtime.Parser,Antlr4.Runtime.NoViableAltException)">
            <inheritdoc/>
        </member>
        <member name="M:ErrorStrategy.ReportInputMismatch(Antlr4.Runtime.Parser,Antlr4.Runtime.InputMismatchException)">
            <inheritdoc/>
        </member>
    </members>
</doc>
